:root {
  --primary-color: #7d7d7d;
}

* {
    /* outline: 1px solid rgb(161, 161, 161);  */
}

html, body {
  margin: 0;
  padding: 0;
  overflow-x: hidden;
  background-color: black;
  font-family: 'Inter', Arial, sans-serif;
  font-weight: 300;
  height: 100%;
  font-size: 18px;

  -webkit-user-select: none; /* Safari */
  -moz-user-select: none;    /* Firefox */
  -ms-user-select: none;     /* IE10+ */
  user-select: none;         /* Standard */
}

.tagline {
  padding-bottom: 24px;
  margin: 0 0 0 0;
}

.slogan {
  margin: 0 0 0 0;
}

.upper-div {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  height: 100%; 
}

.center-container {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  text-align: center;
  color:var(--primary-color);
}

.lower-min-height {
  min-height: 10vh;
}

.center-container img.vector-image:nth-child(2) {
  transform: translateX(22px); /* moves the 2nd child image right by 22px */
}

.content-wrapper {
  margin-top: 20px;
  margin-bottom: 20px;
}

.responsive-svg {
  margin-top: auto;
  width: 100%;
}

.responsive-svg-shrinked {
  /* margin-top: 60px; */
  width: 80%;
}

.cursor:hover {
  cursor: pointer; /* Changes to a hand pointer */
}


.vector-image {
  width: 150px;
  height: 150px; /* fixed size */
  object-fit: contain;
}

.glow-svg {
  position: relative;
  overflow: visible;
}

.glow-bar {
  animation: sweep 2s infinite;
  transform: skewX(-20deg); /* blade angle */
}

.glow-letter {
  width: 150px;
  height: 150px;
}

/* Animation for the stops inside your linearGradient */
@keyframes glowMove {
  0% {
    stop-color: var(--primary-color);
    stop-opacity: 0.3;
  }
  50% {
    stop-color: #fff;
    stop-opacity: 1;
  }
  100% {
    stop-color: var(--primary-color);
    stop-opacity: 0.3;
  }
}

/* Assign this class to your <stop> elements inside linearGradient */
.glow-gradient-stop {
  animation: glowMove 3s ease-in-out infinite;
  animation-fill-mode: forwards;
}

.letter-path {
  fill: black;
  stroke: white;
  stroke-linejoin: round;
  stroke-width: 1.6;
  transition: fill 0.3s ease-in-out;
}

.letter-path:hover {
  fill: white;
}

.menu-trigger {
  position: absolute;
  display: inline-block;
  width: 70px;
  height: 70px;
  overflow: visible; /* ensure no clipping */
  z-index: 100;
}

.menu-svg {
  position: absolute;
  top: 0;
  left: 0;
  transition: opacity 0.6s ease;
}

/* Animated SVG default visible */
.menu-svg.alt {
  opacity: 0;
  pointer-events: none;
  overflow: visible; /* prevent clipping inside SVG */
}

/* Hover fade toggle */
.menu-trigger:hover .menu-svg:not(.alt) {
  opacity: 0;
}

.menu-trigger:hover .menu-svg.alt {
  opacity: 1;
  pointer-events: auto;
}

/* Animate width and x with CSS transition */
.menu-svg.alt .alt-rect {
  transition: width 0.5s ease, x 0.5s ease;
  width: 16px;
  x: 14px;
}

.menu-trigger:hover .menu-svg.alt .alt-rect {
  width: 42px;
  x: 14px; /* keep left edge fixed */
}

/* wave */

.wave-overlay {
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 150%;
  background: radial-gradient(circle at 30% 30%, #999, #333 70%);
  transform: rotate(-10deg) scale(1.5);
  z-index: 10;
  opacity: 0;
  pointer-events: none;
}

@keyframes waveIn {
  0% {
    transform: translateX(-100%) skewX(-10deg);
    opacity: 0;
  }
  50% {
    transform: translateX(0%) skewX(-10deg);
    opacity: 1;
  }
  100% {
    transform: translateX(100%) skewX(-10deg);
    opacity: 0;
  }
}

.animate-wave {
  animation: waveIn 1.6s ease-in-out forwards;
}

.info-flex {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}

.info-paragraph {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: left;
  width: 180px;
  padding: 40px 40px 40px 40px;
  color: var(--primary-color);
  /* min-height: 240px; */
  /* border-color: white; */
  text-align: justify;
  /* outline: 1px solid var(--primary-color); */
}

.hiring {
  margin-top: 40px;
  /* width: 80%; */
  color: var(--primary-color);
  margin-left: 50px;
  margin-right: 50px;
  min-width: 300px;
  text-align: center;
  font-weight: bold;
}

/* gallery  */
.gallery {
  padding-left: 40px;
  padding-right: 40px;
  display: flex;
  flex-wrap: wrap;
  /* gap: 16px; */
  justify-content: center;
  /* max-width: 1000px; */
  margin: 0 auto;
  max-width: 860px;
}

.image-wrapper {
  flex: 1 1 calc(33.333% - 16px);
  min-width: 180px;
  /* box-sizing: border-box; */
  text-align: center;
  margin-top: 20px;
  display: flex;
  flex-direction: column;   /* Stack image-block and caption vertically */
  align-items: center;      /* Center both horizontally */
  height: 200px;
}

.caption {
  margin-top: 8px;
  font-size: 14px;
  color: var(--primary-color);
}

@media (max-width: 768px) {
  .image-wrapper {
    flex: 1 1 calc(50% - 16px);
  }
}

@media (max-width: 480px) {
  .image-wrapper {
    flex: 1 1 100%;
  }
}

/* portraits */
.portraitsvg {
  /* margin-top: 40px;
  margin-bottom: 40px; */
}

.portraitsvg path {
  fill: var(--primary-color);
  stroke:  var(--primary-color); 
  /* stroke-width: 4px; */
}

.portrait {
  /* fill: var(--primary-color);
  stroke:  var(--primary-color);  */
  /* stroke-width: 4px; */
}


.image-block {
  aspect-ratio: 1 / 1;
  overflow: hidden;
  border-radius: 8px;
  align-self: center;

  display: flex;            /* Make it a flex container */
  justify-content: center;  /* Center svg horizontally */
  align-items: center;      /* Center svg vertically */

  width: 80%;
  height: 80%;

  max-width: 230px;
}

.image-block svg {
  width: 80%;
  height: 80%;
  object-fit: cover;
  display: block;
}

.contact-button {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 160px; /* You can adjust width as needed */
  height: 20px; /* Adjust height if needed */
  border-radius: 30px; /* Rounded button */
  cursor: pointer;
  text-align: center;
  margin: 30px 4px 60px 4px; /* Center the button horizontally */
  transition: background-color 0.3s ease;
  /* color: black; */
  /* background-color: var(--primary-color);  */
  background-color: black;

  fill: black;
  stroke: white;
  stroke-linejoin: round;
  stroke-width: 1.6;
  transition: fill 0.3s ease-in-out;
}

.contact-button:hover {
  fill: white;
}

#glow-button {
  pointer-events: all;
}

.contact-text {
  text-anchor: middle;
  font-size: 14px;
  fill: var(--primary-color);
  stroke: none;
  pointer-events: none;
  font-weight: 400;
}

.contact-text:hover {
  fill: black;
}