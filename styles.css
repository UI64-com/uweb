:root {
  --primary-color: #7d7d7d; /* Blue */
}

html, body {
  margin: 0;
  padding: 0;
  overflow-x: hidden;
  background-color: #000;
  font-family: Inter, Arial, sans-serif;
  height: 100%;
}

.center-container {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  padding: 1rem;
  box-sizing: border-box;
  text-align: center;
  max-width: 100vw;
  overflow-wrap: break-word;
  color:var(--primary-color);
}

.center-container img.vector-image:nth-child(2) {
  transform: translateX(22px); /* moves the 2nd child image right by 22px */
}

.content-wrapper {
  width: auto;
  height: auto;
  max-width: 100%;
  max-height: 100%;
  padding: 1rem;
  box-sizing: border-box;
  transform-origin: center;
}

.responsive-svg {
  width: 90vw;
  max-width: 320px;
  height: auto;
  display: block;
}

.vector-image {
  width: 150px;
  height: 150px; /* fixed size */
  object-fit: contain;
}

.glow-svg {
  position: relative;
  overflow: visible;
}

.glow-bar {
  animation: sweep 2s infinite;
  transform: skewX(-20deg); /* blade angle */
}

.glow-letter {
  width: 150px;
  height: 150px;
}

/* Animation for the stops inside your linearGradient */
@keyframes glowMove {
  0% {
    stop-color: var(--primary-color);
    stop-opacity: 0.3;
  }
  50% {
    stop-color: #fff;
    stop-opacity: 1;
  }
  100% {
    stop-color: var(--primary-color);
    stop-opacity: 0.3;
  }
}

/* Assign this class to your <stop> elements inside linearGradient */
.glow-gradient-stop {
  animation: glowMove 3s ease-in-out infinite;
  animation-fill-mode: forwards;
}

.letter-path {
  fill: black;
  stroke: white;
  stroke-linejoin: round;
  stroke-width: 1.6;
  transition: fill 0.3s ease-in-out;
}

.letter-path:hover {
  fill: white;
}

.letter-path::before {
  content: '';
  pointer-events: stroke;
}

.menu-trigger {
  position: absolute;
  display: inline-block;
  width: 70px;
  height: 70px;
  overflow: visible; /* ensure no clipping */
  z-index: 100;
}

.menu-svg {
  position: absolute;
  top: 0;
  left: 0;
  transition: opacity 0.6s ease;
}

/* Animated SVG default visible */
.menu-svg.alt {
  opacity: 0;
  pointer-events: none;
  overflow: visible; /* prevent clipping inside SVG */
}

/* Hover fade toggle */
.menu-trigger:hover .menu-svg:not(.alt) {
  opacity: 0;
}

.menu-trigger:hover .menu-svg.alt {
  opacity: 1;
  pointer-events: auto;
}

/* Animate width and x with CSS transition */
.menu-svg.alt .alt-rect {
  transition: width 0.5s ease, x 0.5s ease;
  width: 16px;
  x: 14px;
}

.menu-trigger:hover .menu-svg.alt .alt-rect {
  width: 42px;
  x: 14px; /* keep left edge fixed */
}

/* wave */

.wave-overlay {
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 150%;
  background: radial-gradient(circle at 30% 30%, #999, #333 70%);
  transform: rotate(-10deg) scale(1.5);
  z-index: 10;
  opacity: 0;
  pointer-events: none;
}

@keyframes waveIn {
  0% {
    transform: translateX(-100%) skewX(-10deg);
    opacity: 0;
  }
  50% {
    transform: translateX(0%) skewX(-10deg);
    opacity: 1;
  }
  100% {
    transform: translateX(100%) skewX(-10deg);
    opacity: 0;
  }
}

.animate-wave {
  animation: waveIn 1.6s ease-in-out forwards;
}

/* .content {
  position: relative;
  z-index: 1;
  padding: 40px;
}
  */

/* info */
.info-paragraph {
  margin-top: 50px;
  width: 70%;
  color: var(--primary-color);
  margin-left: auto;
  margin-right: auto;
}

/* gallery  */
.gallery {
  padding-left: 100px;
  padding-right: 100px;
  display: flex;
  flex-wrap: wrap;
  gap: 16px;
  justify-content: center;
  max-width: 1000px;
  margin: 0 auto;
}

.image-wrapper {
  flex: 1 1 calc(33.333% - 16px);
  min-width: 200px;
  box-sizing: border-box;
  text-align: center;
  margin-top: 40px;
}

.image-wrapper svg {
  width: 50%;
  height: auto;
  display: block;
}

.image-block {
  aspect-ratio: 1 / 1;
  overflow: hidden;
  border-radius: 8px;
}

.image-block svg {
  width: 80%;
  height: 80%;
  object-fit: cover;
  display: block;
}

.caption {
  margin-top: 8px;
  font-size: 14px;
  color: var(--primary-color);
}

@media (max-width: 768px) {
  .image-wrapper {
    flex: 1 1 calc(50% - 16px);
  }
}

@media (max-width: 480px) {
  .image-wrapper {
    flex: 1 1 100%;
  }
}

/* portraits */
.portrait path {
  fill: var(--primary-color);
  /* stroke: black; 
  stroke-width: 1px; */
}

